version: '3'
services:
  neo4j:
    image: neo4j:4.2
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/plugins:/plugins
      - ./neo4j/import:/import
      - ./neo4j/conf:/conf
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4JLABS_PLUGINS='["apoc"]'      
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=128m
      - NEO4J_dbms_memory_heap_max__size=256m
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/password
    networks: ["family_tree_network"]
    restart: unless-stopped
    user: "${UID}:${GID}"

  frontend:
    build:
      context:  https://raw.githubusercontent.com/codecrunchers/family-tree-frontend/master/Dockerfile
      args:
        RELEASE: '0.0.1-testc'
    ports: 
      - "3000:80"        
    networks: ["family_tree_network"]      
    depends_on:
      - backend

  backend:
    build:
      context: https://raw.githubusercontent.com/codecrunchers/family-tree-backend/master/Dockerfile
      args:
        RELEASE: '0.0.1-testc'
    ports: 
      - "9090:9090"        
    networks: ["family_tree_network"]      
    links:
      - "neo4j:ft_neo4j"
    depends_on:
      - neo4j


networks: { family_tree_network: {} }
# use docker volume to persist data outside of a container.
volumes:
  neo4j-family-tree:


