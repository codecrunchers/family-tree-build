version: "3"
services:
  neo4j:
    container_name: ft_neo4j
    image: neo4j:4.0
    volumes:
      - ./data:/data
      - ./plugins:/plugins
      - ./import:/import
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/password
    networks: ["family_tree_network"]
    restart: unless-stopped
  frontend:
    build: ./family-tree-frontend
    ports: 
      - "3000:80"        
    networks: ["family_tree_network"]      
  backend:
    container_name: ft_backend
    build: ./family-tree-backend
    ports: 
      - "9090:9090"        
    networks: ["family_tree_network"]      
    links:
      - "neo4j:ft_neo4j"

networks: { family_tree_network: {} }
# use docker volume to persist data outside of a container.
volumes:
  neo4j-family-tree:


